.486
    .model flat, stdcall
    option casemap :none 
    include \masm32\include\windows.inc
    include \masm32\macros\macros.asm
    include \masm32\include\masm32.inc
    include \masm32\include\gdi32.inc
    include \masm32\include\user32.inc
    include \masm32\include\kernel32.inc
    includelib \masm32\lib\masm32.lib
    includelib \masm32\lib\gdi32.lib
    includelib \masm32\lib\user32.lib
    includelib \masm32\lib\kernel32.lib

; ?????????????????????????????????????????????????????????????????????????

    .data  
          
    .code
     
; ?????????????????????????????????????????????????????????????????????????




start:
	and eax, 3		;eax is uninitialized and controls 1st jmp target
	shl eax, 5
	mov ebx, 42		;ebx is return value (exit code)
	add eax, target1
base:	
	jmp eax

target1:	
	add eax, 64		;target3-target1 (hardcoded so MASM encodes a BYTE operand)
	cmp ecx, 1000		;ecx is uninitialized and controls conditional jumps
	jnz base
	add ebx, 4
	or ebx, 3
	nop
	add ebx, 12345678h
	sub ecx, 23456789h
	jmp eax
	
	
target2:
	add eax, 64		;exit1-target2
	cmp ecx, 3000
	jnz base
	rol ebx, 1
	add ebx, 12345ABCh
	sub ecx, 23456DEFh
	or ebx, 3
	shl ebx, 1
	jmp base
	

target3:
	sub eax, 32		;target3-target2
	cmp ecx, 2000
	jnz base
	shl ebx, 1
	add ebx, 123DEABCh
	sub ecx, 2340BEEFh
	and ebx, 0Fh
	shl ebx, 1
	jmp eax
	
exit1:	
	invoke ExitProcess,ebx		; ebx holds the exit code.
	
; ?????????????????????????????????????????????????????????????????????????

end start

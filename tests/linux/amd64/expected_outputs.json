{
  "_autogenerated": "THIS IS AN AUTOGENERATED FILE. DO NOT EDIT.", 
  "_comment": "AMD64 architecture list of programs under test", 
  "aes-test": {
    "_comment": "This tests inline ASM constructs work correctly by way of the AES instructions.", 
    "default": {
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "MzkgMjUgODQgMWQgMDIgZGMgMDkgZmIgIGRjIDExIDg1IDk3IDE5IDZhIDBiIDMyCjMyIDQzIGY2IGE4IDg4IDVhIDMwIDhkICAzMSAzMSA5OCBhMiBlMCAzNyAwNyAzNAo="
    }
  }, 
  "bts": {
    "_comment": "mcsema's handling of BTS", 
    "default": {
      "_comment": "bts takes no arguments", 
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "eCBpczogZGVhZGJlZTgK"
    }
  }, 
  "data_array": {
    "_comment": "array of function pointers", 
    "default": {
      "_comment": "takes no arguments", 
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "aHJtOiA3Mgpocm06IDgKZGl2OiA5CnNvIGFuc3dlcjogNAo="
    }
  }, 
  "globals": {
    "_comment": "mcsema's handling of global variables", 
    "default": {
      "_comment": "globals takes no arguments", 
      "args": [], 
      "expected_stderr": "aGk=", 
      "expected_stdout": ""
    }
  }, 
  "gzip": {
    "_comment": "Tests for gzip", 
    "compression test": {
      "_comment": "compression and decompression test", 
      "expected_stderr": "", 
      "expected_stdout": "Y29tcHJlc3Npb24gYW5kIGRlY29tcHJlc3Npb24gdGVzdAo=", 
      "shell": "echo 'compression and decompression test' | #PROGNAME -c | #PROGNAME -d"
    }
  }, 
  "hello": {
    "_comment": "These are test names, in case each program has more than one test", 
    "default": {
      "_comment": "The hello program has no arguments", 
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "SGVsbG8sIFdvcmxkIQo="
    }
  }, 
  "lodsb": {
    "_comment": "The lodsb program checks if lodsb, stosb, and testb instructions work", 
    "default": {
      "_comment": "The lodsb program has no arguments", 
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "aSBhbSBzbyBjb29sLgpUaGUgc3RyaW5ncyBtYXRjaAo="
    }
  }, 
  "ls": {
    "_comment": "These are test names, in case each program has more than one test", 
    "default": {
      "_comment": "Default ls will have too many varying outputs, checking for /usr will be fairly sane", 
      "args": [
        "-d", 
        "/usr"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "L3Vzcgo="
    }, 
    "recursive option": {
      "_comment": "The --recursive option triggers a call that used to fail during cfg recovery", 
      "args": [
        "--recursive", 
        "--width=100", 
        "-d", 
        "/usr"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "L3Vzcgo="
    }, 
    "width test": {
      "args": [
        "--width=100", 
        "-d", 
        "/usr"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "L3Vzcgo="
    }
  }, 
  "nc": {
    "_comment": "Tests for netcat", 
    "grab webpage": {
      "_comment": "fetch example.com", 
      "expected_stderr": "", 
      "expected_stdout": "PC9odG1sPgo=", 
      "shell": "python -c \"import sys; sys.stdout.write('GET / HTTP/1.1\\\r\\\nHost: example.com\\\r\\\n\\\r\\\n')\" | #PROGNAME example.com 80 | tail -n 1"
    }, 
    "help arg": {
      "_comment": "nc -help", 
      "args": [
        "-help"
      ], 
      "expected_stderr": "T3BlbkJTRCBuZXRjYXQgKERlYmlhbiBwYXRjaGxldmVsIDEuMTA1LTd1YnVudHUxKQpUaGlzIGlzIG5jIGZyb20gdGhlIG5ldGNhdC1vcGVuYnNkIHBhY2thZ2UuIEFuIGFsdGVybmF0aXZlIG5jIGlzIGF2YWlsYWJsZQppbiB0aGUgbmV0Y2F0LXRyYWRpdGlvbmFsIHBhY2thZ2UuCnVzYWdlOiBuYyBbLTQ2YkNEZGhqa2xuclN0VXV2WnpdIFstSSBsZW5ndGhdIFstaSBpbnRlcnZhbF0gWy1PIGxlbmd0aF0KCSAgWy1QIHByb3h5X3VzZXJuYW1lXSBbLXAgc291cmNlX3BvcnRdIFstcSBzZWNvbmRzXSBbLXMgc291cmNlXQoJICBbLVQgdG9za2V5d29yZF0gWy1WIHJ0YWJsZV0gWy13IHRpbWVvdXRdIFstWCBwcm94eV9wcm90b2NvbF0KCSAgWy14IHByb3h5X2FkZHJlc3NbOnBvcnRdXSBbZGVzdGluYXRpb25dIFtwb3J0XQoJQ29tbWFuZCBTdW1tYXJ5OgoJCS00CQlVc2UgSVB2NAoJCS02CQlVc2UgSVB2NgoJCS1iCQlBbGxvdyBicm9hZGNhc3QKCQktQwkJU2VuZCBDUkxGIGFzIGxpbmUtZW5kaW5nCgkJLUQJCUVuYWJsZSB0aGUgZGVidWcgc29ja2V0IG9wdGlvbgoJCS1kCQlEZXRhY2ggZnJvbSBzdGRpbgoJCS1oCQlUaGlzIGhlbHAgdGV4dAoJCS1JIGxlbmd0aAlUQ1AgcmVjZWl2ZSBidWZmZXIgbGVuZ3RoCgkJLWkgc2VjcwkJRGVsYXkgaW50ZXJ2YWwgZm9yIGxpbmVzIHNlbnQsIHBvcnRzIHNjYW5uZWQKCQktagkJVXNlIGp1bWJvIGZyYW1lCgkJLWsJCUtlZXAgaW5ib3VuZCBzb2NrZXRzIG9wZW4gZm9yIG11bHRpcGxlIGNvbm5lY3RzCgkJLWwJCUxpc3RlbiBtb2RlLCBmb3IgaW5ib3VuZCBjb25uZWN0cwoJCS1uCQlTdXBwcmVzcyBuYW1lL3BvcnQgcmVzb2x1dGlvbnMKCQktTyBsZW5ndGgJVENQIHNlbmQgYnVmZmVyIGxlbmd0aAoJCS1QIHByb3h5dXNlcglVc2VybmFtZSBmb3IgcHJveHkgYXV0aGVudGljYXRpb24KCQktcCBwb3J0CQlTcGVjaWZ5IGxvY2FsIHBvcnQgZm9yIHJlbW90ZSBjb25uZWN0cwogICAgICAgIAktcSBzZWNzCQlxdWl0IGFmdGVyIEVPRiBvbiBzdGRpbiBhbmQgZGVsYXkgb2Ygc2VjcwoJCS1yCQlSYW5kb21pemUgcmVtb3RlIHBvcnRzCgkJLVMJCUVuYWJsZSB0aGUgVENQIE1ENSBzaWduYXR1cmUgb3B0aW9uCgkJLXMgYWRkcgkJTG9jYWwgc291cmNlIGFkZHJlc3MKCQktVCB0b3NrZXl3b3JkCVNldCBJUCBUeXBlIG9mIFNlcnZpY2UKCQktdAkJQW5zd2VyIFRFTE5FVCBuZWdvdGlhdGlvbgoJCS1VCQlVc2UgVU5JWCBkb21haW4gc29ja2V0CgkJLXUJCVVEUCBtb2RlCgkJLVYgcnRhYmxlCVNwZWNpZnkgYWx0ZXJuYXRlIHJvdXRpbmcgdGFibGUKCQktdgkJVmVyYm9zZQoJCS13IHNlY3MJCVRpbWVvdXQgZm9yIGNvbm5lY3RzIGFuZCBmaW5hbCBuZXQgcmVhZHMKCQktWCBwcm90bwlQcm94eSBwcm90b2NvbDogIjQiLCAiNSIgKFNPQ0tTKSBvciAiY29ubmVjdCIKCQkteCBhZGRyWzpwb3J0XQlTcGVjaWZ5IHByb3h5IGFkZHJlc3MgYW5kIHBvcnQKCQktWgkJRENDUCBtb2RlCgkJLXoJCVplcm8tSS9PIG1vZGUgW3VzZWQgZm9yIHNjYW5uaW5nXQoJUG9ydCBudW1iZXJzIGNhbiBiZSBpbmRpdmlkdWFsIG9yIHJhbmdlczogbG8taGkgW2luY2x1c2l2ZV0K", 
      "expected_stdout": ""
    }
  }, 
  "stringpool": {
    "_comment": "These are test names, in case each program has more than one test", 
    "default": {
      "_comment": "The stringpool program has no arguments", 
      "args": [], 
      "expected_stderr": "", 
      "expected_stdout": "cGFydGlhbCBzdHJpbmcgdGVzdDogc3RyaW5nIHRlc3QK"
    }
  }, 
  "switch": {
    "_comment": "A test for switch statements, which hits mcsema's jump table handling", 
    "switch 1": {
      "_comment": "Executes ./switch 1 [the most simple test case]", 
      "args": [
        "1"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "SW5wdXQgd2FzIG9uZQo="
    }, 
    "switch 14": {
      "_comment": "Executes ./switch 14 [hits the default case]", 
      "args": [
        "14"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "VW5rbm93biBpbnB1dDogMTQK"
    }, 
    "switch 74642": {
      "_comment": "Executes ./switch 74642 [hits the big number case]", 
      "args": [
        "74642"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "UmVhbGx5IGJpZyBpbnB1dDogIDB4MTIzOTIK"
    }
  }, 
  "xz": {
    "_comment": "Checks that the linux xz binary translates", 
    "compression test": {
      "_comment": "compression and decompression test", 
      "expected_stderr": "", 
      "expected_stdout": "Y29tcHJlc3Npb24gdGVzdAo=", 
      "shell": "echo 'compression test' | #PROGNAME -c | #PROGNAME -d"
    }, 
    "version": {
      "_comment": "xz --version", 
      "args": [
        "--version"
      ], 
      "expected_stderr": "", 
      "expected_stdout": "eHogKFhaIFV0aWxzKSA1LjEuMGFscGhhCmxpYmx6bWEgNS4xLjBhbHBoYQo="
    }
  }
}